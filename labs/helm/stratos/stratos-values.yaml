# Tag for images - do not edit
consoleVersion: 2.7.0-35f5964bd-cap
dockerRegistrySecret: regsecret
# Specify default DB password
dbPassword: changeme
dbProvider: mysql
# Provide Proxy settings if required
#httpProxy: proxy.corp.net
#httpsProxy: proxy.corp.net
#noProxy: localhost
#ftpProxy: proxy.corp.net
#socksProxy: sock-proxy.corp.net
imagePullPolicy: IfNotPresent
# useLb is deprecated - use console.service.type
useLb: false
console:
  cookieDomain:
  # externalIP deprecated - use console.service.externalIPs
# externalIP: 127.0.0.1
  backendLogLevel: info
  ssoLogin: false
  ssoOptions:
  # Session Store Secret
  sessionStoreSecret:
  # Stratos Services
  service:
    annotations: []
    externalIPs: []
    loadBalancerIP:
    loadBalancerSourceRanges: []
    servicePort: 443
    # nodePort: 30000
    type: ClusterIP
    externalName:
    ingress:
      ## If true, Ingress will be created
      enabled: true

      ## Additional annotations
      annotations: {}

      ## Additional labels
      extraLabels: {}

      ## Host for the ingress
      # Defaults to console.[env.Domain] if env.Domain is set and host is not
      host: stratos.example.com

      # Name of secret containing TLS certificate
      secretName: stratos-ingress-secret

      # crt and key for TLS Certificate (this chart will create the secret based on these)
      tls:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUdDRENDQS9DZ0F3SUJBZ0lCQ0RBTkJna3Foa2lHOXcwQkFRc0ZBRENCampFTE1Ba0dBMVVFQmhNQ1Exb3gKQ3pBSkJnTlZCQWdNQWtoTk1ROHdEUVlEVlFRSERBWlFjbUZuZFdVeEZEQVNCZ05WQkFvTUMyVjRZVzF3YkdVdQpZMjl0TVJFd0R3WURWUVFMREFoMGNtRnBibWx1WnpFWU1CWUdBMVVFQXd3UGMyMTBMbVY0WVcxd2JHVXVZMjl0Ck1SNHdIQVlKS29aSWh2Y05BUWtCRmc5cVpYWmhibk5BYzNWelpTNWpiMjB3SGhjTk1qQXdNekEwTURneE5qRTMKV2hjTk1qRXdNekEwTURneE5qRTNXakNCbERFTE1Ba0dBMVVFQmhNQ1Exb3hDekFKQmdOVkJBZ1RBa2hOTVE4dwpEUVlEVlFRSEV3WlFjbUZuZFdVeEZEQVNCZ05WQkFvVEMyVjRZVzF3YkdVdVkyOXRNUkV3RHdZRFZRUUxFd2gwCmNtRnBibWx1WnpFY01Cb0dBMVVFQXhNVGMzUnlZWFJ2Y3k1bGVHRnRjR3hsTG1OdmJURWdNQjRHQ1NxR1NJYjMKRFFFSkFSWVJZV1J0YVc1QVpYaGhiWEJzWlM1amIyMHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBdwpnZ0VLQW9JQkFRRFJEVVpjN3h3RHhJdnBYWXJTaSsxWkZFb0J0eHRTQkFocTBuWXlMQytrRnZjYW9aeWlpMGNJCktIaDFuNm9XdU9aNVUrTklVMGNCaENXZTZReC81dThSdjkvaWYzTEtJdStXTVNQa3k4MFphR1B2S3pHR2pzdmMKd01Ub1M1MTdLZFMyREVhVDR2ai91R2RhSU5MbVR1TVFmOVRnSkhwWThEM3kvdDYwMDFFaGRqM3RFMW04Ym5LLwpGY2V5WUNRRjVSZmpBNENrY1hkaTJWVEVhTHJYRE16c1Nsdm55cGtGNGpyRXJ2TFN1cGZWQ3ZHTTlDbUFOL0RMCk5GM04wNjdHNERSZ2dpMmxESVpLZzZXTzlSVkJIWHBMZHVSd3cxZXB0bjJpbkxicnFrM0NyYWpSYVBuYitUSVIKcmxmZDJXUFBqYXhvMzhGTjM4Z2lsMW5NOEhQRDUxeDlBZ01CQUFHamdnRm5NSUlCWXpBSkJnTlZIUk1FQWpBQQpNREFHQ1dDR1NBR0crRUlCRFFRakZpRlpZVk5VSUVkbGJtVnlZWFJsWkNCVFpYSjJaWElnUTJWeWRHbG1hV05oCmRHVXdFUVlKWUlaSUFZYjRRZ0VCQkFRREFnWkFNQTRHQTFVZER3RUIvd1FFQXdJRHFEQWRCZ05WSFE0RUZnUVUKYStKc3F1SmxwbE9EeEpKTjNsbk4zT05ERDVVd2djTUdBMVVkSXdTQnV6Q0J1SUFVRnRocUdLRWFJNWFOVDNwWApNZjBOWDVJNm9HaWhnWlNrZ1pFd2dZNHhDekFKQmdOVkJBWVRBa05hTVFzd0NRWURWUVFJREFKSVRURVBNQTBHCkExVUVCd3dHVUhKaFozVmxNUlF3RWdZRFZRUUtEQXRsZUdGdGNHeGxMbU52YlRFUk1BOEdBMVVFQ3d3SWRISmgKYVc1cGJtY3hHREFXQmdOVkJBTU1EM050ZEM1bGVHRnRjR3hsTG1OdmJURWVNQndHQ1NxR1NJYjNEUUVKQVJZUAphbVYyWVc1elFITjFjMlV1WTI5dGdna0F3VVJranZqa1NKZ3dIQVlEVlIwUkJCVXdFNEVSWVdSdGFXNUFaWGhoCmJYQnNaUzVqYjIwd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dJQkFDem5UODQvNnVYZjgwV2dzT2hhdG9NRFdiMU0KOSs1Yk5PQzJCSnkzak5yajdnSWxOMTlwd1lCK1NrN3FNMENRNWJTM2hhSk5JZWV4MWtCVFhmbUh4bmlJWGkzUQpvaGhhWllHMHRuYjdVR09FN0k4dERJOHhxWG9wTFJsMnZrTVNyeHNXRE0zeGlQenhmanN5M0lOM1AyWEkvSUNLCmpKUGxVQ2hqdmRoeFFPQ0JCYndHNzZVZTV2dUdBcHZ3ejExbnUwRHpIdjZjeG1XcGJXWFpvTG9rdU1lZ05oeEEKWllTemgxWkYzU3hCV3RXaStTN1NIa0ZvWDRTTTJmNDNYTzMyT2dxeVJyb0pQYzE5UlllSEt0cm5rdFhZNmIzcgo5YTBkZW9aSGV5a2pWUEJyQWpXMVNiZ1MyYmMxMnJLQWRBY3h3SHk0SDRtN1dRTUlGUUxsUDg2UFdLVGphYk5hCjl1TUVNRldtaFc0V0NpMGtGZk8wV2V3ZEFLTlVKNnpVZE5WUDMxMkV0d2piT2ZoT1dlWUV3V1VSQWk2b2cwMi8KbjRnaGdadGxEYWhiSitlQWR2ODQzUWpMR2gyWSs2YkQ2c09zOXF5VzhwOUlZZUR6cjczT2VTMG1NL0UvQnMzeApwbVJSUXJZUUpnaGlqdVZRZFFsWVNRVDdNS0EvMXZKS0FDNlpLa2VPRkY3NjFlSmk2RUpLZHNEUTRxZStIayswCjNzamZieVc5V2dEamRzdHp2VEFNRzJwVHRRQlp1dFhRbUhBdy81VEdQcU5uUUVGcTFBTGpiU3ZRL2EyOGZCczAKZ2Rhd1ZZR05kNU81RXdOU09sTWN2Wit5Y00raHhsUmtjekRtN094dVdrNm16NFpVbHdkUFZTS2RVU0RVZktiSgpkWmcwaENkMkViOEEycGNaCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K

        key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMFExR1hPOGNBOFNMNlYySzBvdnRXUlJLQWJjYlVnUUlhdEoyTWl3dnBCYjNHcUdjCm9vdEhDQ2g0ZForcUZyam1lVlBqU0ZOSEFZUWxudWtNZitidkViL2Y0bjl5eWlMdmxqRWo1TXZOR1doajd5c3gKaG83TDNNREU2RXVkZXluVXRneEdrK0w0LzdobldpRFM1azdqRUgvVTRDUjZXUEE5OHY3ZXROTlJJWFk5N1JOWgp2RzV5dnhYSHNtQWtCZVVYNHdPQXBIRjNZdGxVeEdpNjF3ek03RXBiNThxWkJlSTZ4Szd5MHJxWDFRcnhqUFFwCmdEZnd5elJkemRPdXh1QTBZSUl0cFF5R1NvT2xqdlVWUVIxNlMzYmtjTU5YcWJaOW9weTI2NnBOd3EybzBXajUKMi9reUVhNVgzZGxqejQyc2FOL0JUZC9JSXBkWnpQQnp3K2RjZlFJREFRQUJBb0lCQUFHNXgxUHJFV01pa3prWQo4WlZ0WEVjNCtLZHMrSWZEeXNIKy9NVExRcFZyTHgwRUtvUFkvSHdmd1diUEs1dEdhWGlrN2FKaU5aclltV3JuClo1Z0Nzd1NGZmZhanNMSGtlZS9XZGdKa2dFdnVaYXpLd1h6bjN0enlwbTE0ZWxOUzlCT1FwR0NDSmlZT1FxUW0KMHpiZGZkaGNCY2pYNUQ2cHRRazFlMmNvdTJtNFNWSTlSNUd6Rlo4ZTJVdlhWUS9XOGsyYkM2TStPWW45dy9BMQp2T0YzVkFpVjFVTjlwb1FDVVdhSlNrMDNxQjJna0ZHVTVLTW5hQ3pLcjhsbC9mWFRLbDJRRnp0NmZHQVNmSTBUCkF3K0psV0lHdkUrcEJrdEJFeSs4UlF2dnJ4cTZkSFZHZXV0akMxbHlNUDJZYi9hc1JQZWlXdEVhWmJXQUVrdysKK0NOdVNrRUNnWUVBL3RTazVzOCtQeUs4L3FvcDg1TUZTaDVWOTZXd2tSVmpGODNxRmMwZFJsRndGTEVvYi9iTwpRUk5PWVoyN3U3dnNBQWhjTDhPT0hXeVZRNkFCYjBtMjZxNlQ3TWQ4OHNpVTdKblMrbkkybUNLeTRFQ3kzK1pwClo3QVhxa0VtWlZtZU1nbTIwWjF6WkEyWmFiQWZYRStwdmg5NjhXS2VKSDl6NkdBMXplWlZldkVDZ1lFQTBnTGEKYmJzeGVDQ2VueEJ1aTdIT09sZXRhNFUwNzZvUWlLK3JGUmNXRjNHL1lKemlneUNxUWlrK0diaVFjbkRRYXcrZApFNzJXdmZ0UXdEc3M3cWlpejBQdTB0QngxWDI5TndrMjNJOHdSRXU1NjJUblVqK1QyMXhNMTVJSlZKUGJVdkhXCitYWG5hSVVDUk4vcmMxWWpnbkYybEkxMlFNbVNSRklhaG5IemdrMENnWUI1K3pvUVRnWGkzUE1SQ0UxYWpmYkwKT3VnMXlqZFJ5NllLZ0FQY2VibllyaVR6a3JYam1vV3lldFpiUGREZWxaN3JpUlR2dkRFci9vMFl1Ti9XOExkQgpjVjNYeXNvUndWZ2dSYVhMUXA3RmhsNlBvQWkveXFDTUJLdmZVSjViaDJHRlhFY0o0YytaaGpUNGRWa2RxL2g1CnpNSGlDQzNoRksxYi82bmhySzhnVVFLQmdCa1k3akdlNVZLTjAyYis5N2NLRUxNNE55bGFTZkU2U2ErTURzMysKYkUxdzhvWUJPYkNoL3JiWlp1cDcvQWN4SkRjbkxvWmxhZFphYWxRT3ZsZm5IMDNWdUh6SkhGRi9MVldlYkVmLwpkSzAwdjRzNkM4cndmaU1BN00zMlRkY2x0Rmc5UG91aFkzNUNKdnRFSjBjcFRDVVNtakUybHFNM2M1dG1sSFRzCnVVVWhBb0dCQUxpRTE1VFhFU0VNUWZ4NUlvWjA0Qy9DbmhoZkZINVAxQXUzNEh3b1hveXZXK1RPSldSWUt1emwKS1hSTTg1UGlMOEV1SVRrVlRKVXl2OXdzeWhUNjZCWGNpNjRGV0dQdjRjTTgwdFlZS3MrT082OTg4dUl4V2dDMQpROHltQXhZcmRZRDVhSFQwNENtdU5vb1pOZUl6UG5QOHIrUEVCY3JhOEk2SkhuU3lrcG1KCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==

    http:
      enabled: false
      servicePort: 80
      # nodePort: 30001

  # Name of config map that provides the template files for user invitation emails
  templatesConfigMapName:

  # Email subject of the user invitation message
  userInviteSubject: ~

  # Whether to perform the volume migration job on install/upgrade (migrate to secrets)
  migrateVolumes: false

  # Enable/disable Tech Preview
  techPreview: false

  # Use local admin user instead of UAA - set to a password to enable
  localAdminPassword: ~

images:
  console: stratos-console
  proxy: stratos-jetstream
  postflight: stratos-postflight-job
  mariadb: stratos-mariadb

# Specify which storage class should be used for PVCs
#storageClass: default
#consoleCert: |
#    -----BEGIN CERTIFICATE-----
#   MIIDXTCCAkWgAwIBAgIJAJooOiQWl1v1MA0GCSqGSIb3DQEBCwUAMEUxCzAJBgNV
#   ...
#    -----END CERTIFICATE-----
#consoleCertKey: |
#    -----BEGIN PRIVATE KEY-----
#    MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkdgEAAoIBAQDV9+ySh0xZzM41
#    ...
#    -----END PRIVATE KEYE-----
# MariaDB chart configuration
mariadb:
  # Only required for creating the databases
  mariadbRootPassword: changeme
  adminUser: root
  # Credentials for user
  mariadbUser: console
  mariadbPassword: changeme
  mariadbDatabase: console
  usePassword: true
  resources:
    requests:
      memory: 256Mi
      cpu: 250m
  persistence:
    enabled: true
    accessMode: ReadWriteOnce
    size: 1Gi
    storageClass:
uaa:
  protocol: https://
  port:
  host:
  consoleClient:
  consoleClientSecret:
  consoleAdminIdentifier:
  skipSSLValidation: false
# SCF values compatability
env:
  DOMAIN:
  UAA_HOST:
  UAA_PORT: 2793
  # UAA Zone (namespace cf ias deployed to when deployed to Kubernetes)
  UAA_ZONE: scf

  # SMTP Settings for Email Sending (User Invites)
  # If true, authenticate against the SMTP server using AUTH command.
  SMTP_AUTH: "false"

  # SMTP from address
  SMTP_FROM_ADDRESS: ~

  # SMTP server username
  SMTP_USER: ~

  # SMTP server password
  SMTP_PASSWORD: ~

  # SMTP server host address
  SMTP_HOST: ~

  # SMTP server port
  SMTP_PORT: "25"

kube:
  # Whether RBAC is enabled in the Kubernetes cluster
  auth: "rbac"
  external_console_https_port: 8443
  storage_class:
    persistent:
  organization: cap
  registry:
    hostname: registry.suse.com
    username:
    password:
    email: default
services:
  loadbalanced: false
metrics:
  enabled: false
